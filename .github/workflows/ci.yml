name: CI

on:
  push:
    branches:
    - '**'
    tags:
    - 'v[0-9]+.[0-9]+-release*'
    paths-ignore:
    - '**.md'

  pull_request:
    branches:
    - master
    paths-ignore:
    - '**.md'

env:
  FAISS_VERSION: 1.7.2.2
  NUGET_PACKAGES_DIR: ./nuget-packages

jobs:
  build-pack-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Build
      run: dotnet build --configuration Release

    - name: Pack
      run: dotnet pack --configuration Release --no-build --output ${{ env.NUGET_PACKAGES_DIR }} ./Vektonn.Index/Vektonn.Index.csproj

    - name: Store nuget packages as artifacts
      uses: actions/upload-artifact@v2
      with:
        name: nuget-packages
        path: ${{ env.NUGET_PACKAGES_DIR }}/*
        if-no-files-found: error
        retention-days: 10

    - name: Test
      run: |
        docker container run --rm \
            --volume $PWD/lib-faiss-native:/host \
            ghcr.io/${{ github.repository_owner }}/vektonn/faiss-lib:$FAISS_VERSION \
            bash -c 'cp /lib-faiss-native/* /host/'

        export LD_LIBRARY_PATH=$PWD/lib-faiss-native
        dotnet test --configuration Release --no-build --verbosity normal

    - name: Store approval tests failure artifacts if any
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: approval-tests-failure-artifacts
        path: |
          ./Vektonn.Index.Tests/**/*.approved.*
          ./Vektonn.Index.Tests/**/*.received.*
        if-no-files-found: ignore
        retention-days: 10

  nuget-publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-pack-and-test
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
    - name: Download nuget packages from artifacts
      uses: actions/download-artifact@v2
      with:
        name: nuget-packages
        path: ${{ env.NUGET_PACKAGES_DIR }}

    - name: Publish to nuget.org
      run: dotnet nuget push ${{ env.NUGET_PACKAGES_DIR }}/*.nupkg --api-key ${{ secrets.NUGET_ORG_API_KEY }} --source https://api.nuget.org/v3/index.json
